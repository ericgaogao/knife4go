package js


import (
	"gin-swagger-knife/constant"
	"gin-swagger-knife/utils"
	"github.com/gin-gonic/gin"

)

func AddRouterOfChunk069eb4373e4f260aJs(router *gin.Engine) {
    
    utils.GetJs(router, CHUNK_069EB437_3E4F260A_JS_BASE64_OR_CONTENT, CHUNK_069EB437_3E4F260A_JS_RELATIVE_PATH)
    
}

const (
	CHUNK_069EB437_3E4F260A_JS_RELATIVE_PATH = constant.ROOT_PATH + "/webjars/js/chunk-069eb437.3e4f260a.js}"
	CHUNK_069EB437_3E4F260A_JS_BASE64_OR_CONTENT = `(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-069eb437"],{1148:function(e,t,a){"use strict";var n=a("a691"),r=a("577e"),i=a("1d80");e.exports=function(e){var t=r(i(this)),a="",o=n(e);if(o<0||o==1/0)throw RangeError("Wrong number of repetitions");for(;o>0;(o>>>=1)&&(t+=t))1&o&&(a+=t);return a}},"408a":function(e,t){var a=1..valueOf;e.exports=function(e){return a.call(e)}},7444:function(e,t,a){"use strict";a.r(t);var n=a("5530"),r=(a("d3b7"),a("3ca3"),a("ddb0"),a("159b"),a("b0c0"),a("4de4"),a("4d63"),a("ac1f"),a("25f0"),a("caad"),a("2532"),a("1276"),a("a15b"),a("5319"),a("b64b"),a("99af"),a("b680"),a("2b3d"),a("9861"),a("8237"),a("4328")),i=a.n(r),o=a("b1c7"),s=a("1469"),l=a("5609"),u=function(e,t,a,n,r){this.groupId=r,this.cacheKey=e,this.allGroups=a,this.commands=n,this.targetValue=t||{},this.init()};u.prototype={init:function(){var e=this;o.a.arrNotEmpty(this.commands)&&this.commands.forEach((function(t){e.addValue(t.name,t.value,t.type,t.all)}))},addValue:function(e,t,a,n){var r=this;n?this.allGroups.forEach((function(n){r.addCurrentGroup(e,t,a,n)})):this.addCurrentGroup(e,t,a,this.groupId)},addCurrentGroup:function(e,t,a,n){var r=e+a,i=this.targetValue[n];o.a.arrNotEmpty(i)?i.filter((function(e){return e.pkid==r&&e.in==a})).length>0?i.forEach((function(e){e.pkid==r&&e.in==a&&(e.value=t)})):i.push({name:e,value:t,in:a,pkid:r}):(i=[]).push({name:e,value:t,in:a,pkid:r});this.targetValue[n]=i},save:function(){s.a.setItem(this.cacheKey,this.targetValue)}};var c=u,d=function(e){var t=this;this.groupid=e.groupid||"afterScriptGroup",this.commands=[],this.allgroupids=e.allgroupids||[],this.response=e.response||{data:{},headers:{}},this.global={setHeader:function(e,a){t.global.setCommon(e,a,"header",!1)},setAllHeader:function(e,a){t.global.setCommon(e,a,"header",!0)},setParameter:function(e,a){t.global.setCommon(e,a,"query",!1)},setAllParameter:function(e,a){t.global.setCommon(e,a,"query",!0)},setCommon:function(e,a,n,r){t.global.cacheCommand(e,a,n,r)},cacheCommand:function(e,a,n,r){t.commands.push({name:e,value:a,type:n,all:r})},action:function(){if(null!=t.commands&&t.commands.length>0){var e=t.commands,a=t.groupid,n=t.allgroupids;s.a.getItem(l.a.globalParameter).then((function(t){new c(l.a.globalParameter,t,n,e,a).save()}))}},executeAsyncCommon:function(e,a,n,r){var i=t.groupid,u=e+n;if(r){var c=t.allgroupids;s.a.getItem(l.a.globalParameter).then((function(t){if(o.a.checkUndefined(t)){var r={};c.forEach((function(i){var s=t[i];o.a.checkUndefined(s)||o.a.arrEmpty(s)?((s=[]).push({name:e,value:a,in:n,pkid:u}),r[i]=s):(0==s.filter((function(e){return e.pkid==u&&e.in==n})).length?s.push({name:e,value:a,in:n,pkid:u}):s.forEach((function(e){e.in==n&&e.pkid==u&&(e.value=a)})),r[i]=s)})),s.a.setItem(l.a.globalParameter,r)}else{var i=[];i.push({name:e,value:a,in:n,pkid:u});var d={};c.forEach((function(e){d[e]=i})),s.a.setItem(l.a.globalParameter,d)}}))}else s.a.getItem(l.a.globalParameter).then((function(t){var r=[],c={};if(o.a.checkUndefined(t)){for(var d in t)d==i?r=t[d]:c[d]=t[d];0==r.filter((function(e){return e.pkid==u&&e.in==n})).length?r.push({name:e,value:a,in:n,pkid:u}):r.forEach((function(e){e.in==n&&e.pkid==u&&(e.value=a)})),c[i]=r,s.a.setItem(l.a.globalParameter,c)}else r.push({name:e,value:a,in:n,pkid:u});c[i]=r,s.a.setItem(l.a.globalParameter,c)}))}}},h=a("bc3a"),m=a.n(h),p=a("53ca");
/**
 * vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.
 * https://github.com/aabluedragon/vkbeautify
 * Copyright (c) 2012 Vadim Kiryukhin
 * vkiryukhin @ gmail.com
 * http://www.eslinstructor.net/vkbeautify/
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 *   Pretty print
 *
 *        vkbeautify.xml(text [,indent_pattern]);
 *        vkbeautify.json(text [,indent_pattern]);
 *        vkbeautify.css(text [,indent_pattern]);
 *        vkbeautify.sql(text [,indent_pattern]);
 *
 *        @text - String; text to beatufy;
 *        @indent_pattern - Integer | String;
 *                Integer:  number of white spaces;
 *                String:   character string to visualize indentation ( can also be a set of white spaces )
 *   Minify
 *
 *        vkbeautify.xmlmin(text [,preserve_comments]);
 *        vkbeautify.jsonmin(text);
 *        vkbeautify.cssmin(text [,preserve_comments]);
 *        vkbeautify.sqlmin(text);
 *
 *        @text - String; text to minify;
 *        @preserve_comments - Bool; [optional];
 *                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )
 *
 *   Examples:
 *        vkbeautify.xml(text); // pretty print XML
 *        vkbeautify.json(text, 4 ); // pretty print JSON
 *        vkbeautify.css(text, '. . . .'); // pretty print CSS
 *        vkbeautify.sql(text, '----'); // pretty print SQL
 *
 *        vkbeautify.xmlmin(text, true);// minify XML, preserve comments
 *        vkbeautify.jsonmin(text);// minify JSON
 *        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )
 *        vkbeautify.sqlmin(text);// minify SQL
 *
 */
function f(e){var t="    ";if(isNaN(parseInt(e)))t=e;else switch(e){case 1:t=" ";break;case 2:t="  ";break;case 3:t="   ";break;case 4:t="    ";break;case 5:t="     ";break;case 6:t="      ";break;case 7:t="       ";break;case 8:t="        ";break;case 9:t="         ";break;case 10:t="          ";break;case 11:t="           ";break;case 12:t="            "}for(var a=["\n"],n=0;n<100;n++)a.push(a[n]+t);return a}function g(){this.step="    ",this.shift=f(this.step)}function w(e,t){return t-(e.replace(/\(/g,"").length-e.replace(/\)/g,"").length)}function b(e,t){return e.replace(/\s{1,}/g," ").replace(/ AND /gi,"~::~"+t+t+"AND ").replace(/ BETWEEN /gi,"~::~"+t+"BETWEEN ").replace(/ CASE /gi,"~::~"+t+"CASE ").replace(/ ELSE /gi,"~::~"+t+"ELSE ").replace(/ END /gi,"~::~"+t+"END ").replace(/ FROM /gi,"~::~FROM ").replace(/ GROUP\s{1,}BY/gi,"~::~GROUP BY ").replace(/ HAVING /gi,"~::~HAVING ").replace(/ IN /gi," IN ").replace(/ JOIN /gi,"~::~JOIN ").replace(/ CROSS~::~{1,}JOIN /gi,"~::~CROSS JOIN ").replace(/ INNER~::~{1,}JOIN /gi,"~::~INNER JOIN ").replace(/ LEFT~::~{1,}JOIN /gi,"~::~LEFT JOIN ").replace(/ RIGHT~::~{1,}JOIN /gi,"~::~RIGHT JOIN ").replace(/ ON /gi,"~::~"+t+"ON ").replace(/ OR /gi,"~::~"+t+t+"OR ").replace(/ ORDER\s{1,}BY/gi,"~::~ORDER BY ").replace(/ OVER /gi,"~::~"+t+"OVER ").replace(/\(\s{0,}SELECT /gi,"~::~(SELECT ").replace(/\)\s{0,}SELECT /gi,")~::~SELECT ").replace(/ THEN /gi," THEN~::~"+t).replace(/ UNION /gi,"~::~UNION~::~").replace(/ USING /gi,"~::~USING ").replace(/ WHEN /gi,"~::~"+t+"WHEN ").replace(/ WHERE /gi,"~::~WHERE ").replace(/ WITH /gi,"~::~WITH ").replace(/ ALL /gi," ALL ").replace(/ AS /gi," AS ").replace(/ ASC /gi," ASC ").replace(/ DESC /gi," DESC ").replace(/ DISTINCT /gi," DISTINCT ").replace(/ EXISTS /gi," EXISTS ").replace(/ NOT /gi," NOT ").replace(/ NULL /gi," NULL ").replace(/ LIKE /gi," LIKE ").replace(/\s{0,}SELECT /gi,"SELECT ").replace(/\s{0,}UPDATE /gi,"UPDATE ").replace(/ SET /gi," SET ").replace(/~::~{1,}/g,"~::~").split("~::~")}a("841c"),a("fb6a"),g.prototype.xml=function(e,t){var a=e.replace(/>\s{0,}</g,"><").replace(/</g,"~::~<").replace(/\s*xmlns\:/g,"~::~xmlns:").replace(/\s*xmlns\=/g,"~::~xmlns=").split("~::~"),n=a.length,r=!1,i=0,o="",s=0,l=t?f(t):this.shift;for(s=0;s<n;s++)a[s].search(/<!/)>-1?(o+=l[i]+a[s],r=!0,(a[s].search(/-->/)>-1||a[s].search(/\]>/)>-1||a[s].search(/!DOCTYPE/)>-1)&&(r=!1)):a[s].search(/-->/)>-1||a[s].search(/\]>/)>-1?(o+=a[s],r=!1):/^<\w/.exec(a[s-1])&&/^<\/\w/.exec(a[s])&&/^<[\w:\-\.\,]+/.exec(a[s-1])==/^<\/[\w:\-\.\,]+/.exec(a[s])[0].replace("/","")?(o+=a[s],r||i--):a[s].search(/<\w/)>-1&&-1==a[s].search(/<\//)&&-1==a[s].search(/\/>/)?o=o+=r?a[s]:l[i++]+a[s]:a[s].search(/<\w/)>-1&&a[s].search(/<\//)>-1?o=o+=r?a[s]:l[i]+a[s]:a[s].search(/<\//)>-1?o=o+=r?a[s]:l[--i]+a[s]:a[s].search(/\/>/)>-1?o=o+=r?a[s]:l[i]+a[s]:a[s].search(/<\?/)>-1||a[s].search(/xmlns\:/)>-1||a[s].search(/xmlns\=/)>-1?o+=l[i]+a[s]:o+=a[s];return"\n"==o[0]?o.slice(1):o},g.prototype.json=function(e,t){return t=t||this.step,"undefined"==typeof JSON?e:"string"==typeof e?JSON.stringify(JSON.parse(e),null,t):"object"===Object(p.a)(e)?JSON.stringify(e,null,t):e},g.prototype.css=function(e,t){var a=e.replace(/\s{1,}/g," ").replace(/\{/g,"{~::~").replace(/\}/g,"~::~}~::~").replace(/\;/g,";~::~").replace(/\/\*/g,"~::~/*").replace(/\*\//g,"*/~::~").replace(/~::~\s{0,}~::~/g,"~::~").split("~::~"),n=a.length,r=0,i="",o=0,s=t?f(t):this.shift;for(o=0;o<n;o++)/\{/.exec(a[o])?i+=s[r++]+a[o]:/\}/.exec(a[o])?i+=s[--r]+a[o]:(/\*\\/.exec(a[o]),i+=s[r]+a[o]);return i.replace(/^\n{1,}/,"")},g.prototype.sql=function(e,t){var a=e.replace(/\s{1,}/g," ").replace(/\'/gi,"~::~'").split("~::~"),n=a.length,r=[],i=0,o=this.step,s=0,l="",u=0,c=t?f(t):this.shift;for(u=0;u<n;u++)r=u%2?r.concat(a[u]):r.concat(b(a[u],o));for(n=r.length,u=0;u<n;u++)s=w(r[u],s),/\s{0,}\s{0,}SELECT\s{0,}/.exec(r[u])&&(r[u]=r[u].replace(/\,/g,",\n"+o+o)),/\s{0,}\s{0,}SET\s{0,}/.exec(r[u])&&(r[u]=r[u].replace(/\,/g,",\n"+o+o)),/\s{0,}\(\s{0,}SELECT\s{0,}/.exec(r[u])?l+=c[++i]+r[u]:/\'/.exec(r[u])?(s<1&&i&&i--,l+=r[u]):(l+=c[i]+r[u],s<1&&i&&i--);return l=l.replace(/^\n{1,}/,"").replace(/\n{1,}/g,"\n")},g.prototype.xmlmin=function(e,t){return(t?e:e.replace(/\<![ \r\n\t]*(--([^\-]|[\r\n]|-[^\-])*--[ \r\n\t]*)\>/g,"").replace(/[ \r\n\t]{1,}xmlns/g," xmlns")).replace(/>\s{0,}</g,"><")},g.prototype.jsonmin=function(e){return"undefined"==typeof JSON?e:JSON.stringify(JSON.parse(e),null,0)},g.prototype.cssmin=function(e,t){return(t?e:e.replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+\//g,"")).replace(/\s{1,}/g," ").replace(/\{\s{1,}/g,"{").replace(/\}\s{1,}/g,"}").replace(/\;\s{1,}/g,";").replace(/\/\*\s{1,}/g,"/*").replace(/\*\/\s{1,}/g,"*/")},g.prototype.sqlmin=function(e){return e.replace(/\s{1,}/g," ").replace(/\s{1,}\(/,"(").replace(/\s{1,}\)/,")")};var F=g,y={name:"Debug",components:{EditorScript:function(){return Promise.all([a.e("chunk-3b888a65"),a.e("chunk-0fd67716"),a.e("chunk-2d22269d")]).then(a.bind(null,"cf04"))},EditorDebugShow:function(){return Promise.all([a.e("chunk-3b888a65"),a.e("chunk-0fd67716"),a.e("chunk-3ec4aaa8"),a.e("chunk-735c675c")]).then(a.bind(null,"b3ee"))},DebugResponse:function(){return a.e("chunk-589faee0").then(a.bind(null,"3c60"))}},props:{api:{type:Object,required:!0},swaggerInstance:{type:Object,required:!0}},data:function(){var e=this;return{i18n:null,bigFlag:!1,bigBlobFlag:!1,debugUrlStyle:"width: 80%",enableRequestCache:!1,enableDynamicParameter:!1,enableHost:!1,enableHostText:"",authorizeQueryParameters:[],headerColumn:[],formColumn:[],urlFormColumn:[],allowClear:!0,pagination:!1,headerAutoOptions:l.a.debugRequestHeaders,headerOptions:l.a.debugRequestHeaderOptions,headerCount:0,headerCountFlag:!1,headerSelectName:"",selectedRowKeys:[],requestParameterAllow:!0,rowSelection:{selectedRowKeys:[],onChange:function(t,a){e.rowSelection.selectedRowKeys=t}},rowFormSelection:{selectedRowKeys:[],onChange:function(t,a){e.rowFormSelection.selectedRowKeys=t}},rowRawFormSelection:{selectedRowKeys:[],onChange:function(t,a){e.rowRawFormSelection.selectedRowKeys=t}},rowUrlFormSelection:{selectedRowKeys:[],onChange:function(t,a){e.rowUrlFormSelection.selectedRowKeys=t}},headerData:[],headerTableFlag:!0,globalParameters:[],debugUrl:"",debugPathFlag:!1,debugPathParams:[],debugLoading:!1,oAuthApi:!1,debugSend:!1,formData:[],formFlag:!1,formTableFlag:!0,urlFormData:[],urlFormFlag:!1,urlFormTableFlag:!0,rawFormData:[],rawFormFlag:!1,rawFormTableFlag:!0,rawDefaultText:"Auto",rawFlag:!1,rawTypeFlag:!1,formatFlag:!1,rawText:"",rawScript:"",rawScriptMode:"javascript",rawMode:"text",rawRequestType:"application/json",requestContentType:"x-www-form-urlencoded",responseHeaders:[],responseRawText:"",responseCurlText:"",responseStatus:null,responseContent:null,responseFieldDescriptionChecked:!0,routeHeader:null,oas2:!0}},created:function(){this.routeHeader=this.swaggerInstance.header,this.oas2=this.swaggerInstance.oas2(),this.initI18n(),this.initLocalGlobalParameters(),this.initDebugUrl(),this.enableReloadCacheParameter?this.debugUrlStyle="width: 70%;":this.debugUrlStyle="width: 80%;"},computed:{language:function(){return this.$store.state.globals.language},enableAfterScript:function(){return this.$store.state.globals.enableAfterScript},enableReloadCacheParameter:function(){return this.$store.state.globals.enableReloadCacheParameter}},watch:{language:function(e,t){this.initI18n()}},methods:{reloadCacheParameter:function(){var e=this,t=[],a=this.api.instanceId;this.$localStore.getItem(l.a.globalParameter).then((function(n){null!=n&&null!=n[a]&&null!=n[a]&&(t=n[a]),o.a.arrNotEmpty(t)&&(e.reloadUpdateHeader(t),e.rawFlag?e.reloadUpdateRawForm(t):e.formFlag?e.reloadUpdateForm(t):e.urlFormFlag&&e.reloadUpdateUrlForm(t))}))},reloadUpdateCommons:function(e,t,a){var n=[],r=!1,i=!1;o.a.arrNotEmpty(t)&&t.forEach((function(t){var i=t.name+a,s=e.filter((function(e){return e.pkid==i}));if(o.a.arrNotEmpty(s)){var l=s[0],u=o.a.getValue(l,"value","",!0);t.content=u,r=!0}n.push(t)}));var s=e.filter((function(e){return e.in==a}));return o.a.arrNotEmpty(s)&&s.forEach((function(e){var t=n.filter((function(t){return t.name==e.name}));if(!o.a.arrNotEmpty(t)){var a={id:o.a.randomMd5(),name:e.name,content:e.value,require:!0,description:"",enums:null,enumsMode:"default",new:!1};n.push(a),r=!0,i=!0}})),{update:r,data:n,add:i}},reloadUpdateHeader:function(e){var t=this,a=this.reloadUpdateCommons(e,this.headerData,"header");a.update&&(this.headerData=[],setTimeout((function(){t.headerData=a.data,a.add&&(t.initSelectionHeaders(),t.headerResetCalc())}),10))},reloadUpdateUrlForm:function(e){var t=this,a=this.reloadUpdateCommons(e,this.urlFormData,"query");a.update&&(this.urlFormData=[],setTimeout((function(){t.urlFormData=a.data,a.add&&t.initUrlFormSelections()}),10))},reloadUpdateForm:function(e){var t=this,a=this.reloadUpdateCommons(e,this.formData,"query");a.update&&(this.formData=[],setTimeout((function(){t.formData=a.data,a.add&&t.initFormSelections()}),10))},reloadUpdateRawForm:function(e){var t=this,a=this.reloadUpdateCommons(e,this.rawFormData,"query");a.update&&(this.rawFormData=[],setTimeout((function(){t.rawFormData=a.data,a.add&&(t.rawFormFlag=!0,t.rawFormTableFlag=!0,t.initRawFormSelections())}),10))},getCurrentI18nInstance:function(){return this.$i18n.messages[this.language]},initI18n:function(){var e=this.getCurrentI18nInstance();this.i18n=e,this.headerColumn=e.table.debugRequestHeaderColumns,this.formColumn=e.table.debugFormDataRequestColumns,this.urlFormColumn=e.table.debugUrlFormRequestColumns},debugUrlChange:function(e){this.debugUrl=e.target.value},initDebugUrl:function(){if(this.debugUrl=this.api.url,new RegExp("{(.*?)}","ig").test(this.debugUrl)){this.debugPathFlag=!0;for(var e=null,t=new RegExp("{(.*?)}","ig");e=t.exec(this.debugUrl);)this.debugPathParams.push(e[1])}},initLocalGlobalParameters:function(){var e=this,t=this.api.instanceId;this.$localStore.getItem(l.a.globalSettingsKey).then((function(a){if(o.a.checkUndefined(a)&&(e.enableRequestCache=a.enableRequestCache,o.a.checkUndefined(a.enableDynamicParameter)&&(e.enableDynamicParameter=a.enableDynamicParameter),o.a.checkUndefined(a.enableHost))){e.enableHost=a.enableHost;var n=a.enableHostText;o.a.checkUndefined(n)?(n.startWith("http")||(n="http://"+n),e.enableHostText=n):e.enableHost=!1}e.$localStore.getItem(l.a.globalParameter).then((function(a){null!=a&&null!=a[t]&&null!=a[t]&&(e.globalParameters=a[t]);var n=l.a.debugCacheApiId+e.api.id;e.$localStore.getItem(n).then((function(t){e.initHeaderParameter(t);var a=l.a.globalSecurityParamPrefix+e.api.instanceId;e.$localStore.getItem(a).then((function(a){o.a.arrNotEmpty(a)&&a.forEach((function(t){if("query"==t.in){var a={id:o.a.randomMd5(),name:t.name,content:t.value,value:t.value,require:!0,description:"",enums:null,enumsMode:"default",new:!1};e.api.securityFlag&&e.api.securityKeys.includes(t.key)&&e.authorizeQueryParameters.push(a)}})),e.initBodyParameter(t)}))}))}))}))},initHeaderParameter:function(e){var t=this,a=this.syncFromOAuth2();if(o.a.checkUndefined(a)){this.oAuthApi=!0;var n={id:o.a.randomMd5(),name:a.name,content:a.accessToken,require:!0,description:"",enums:null,enumsMode:"default",new:!1};this.addDebugHeader(n)}this.globalParameters.forEach((function(e){if("header"==e.in){var a={id:o.a.randomMd5(),name:e.name,content:e.value,require:!1,description:"",enums:null,enumsMode:"default",new:!1};t.addDebugHeader(a)}}));var r=l.a.globalSecurityParamPrefix+this.api.instanceId;this.$localStore.getItem(r).then((function(a){o.a.arrNotEmpty(a)&&a.forEach((function(e){var a={id:o.a.randomMd5(),name:e.name,content:e.value,require:!0,description:"",enums:null,enumsMode:"default",new:!1};"header"==e.in&&t.api.securityFlag&&t.api.securityKeys.includes(e.key)&&t.addDebugHeader(a)})),t.updateHeaderFromCacheApi(e),t.addNewLineHeader(),t.initSelectionHeaders(),t.headerResetCalc()}))},updateHeaderFromCacheApi:function(e){var t=this;if(this.enableRequestCache&&o.a.checkUndefined(e)){var a=e.headerData;this.headerData.forEach((function(e){if(!o.a.strNotBlank(e.content)){var n=a.filter((function(t){return t.name==e.name}));n.length>0&&(t.oAuthApi?"Authorization"!=e.name&&(e.content=n[0].content):e.content=n[0].content)}}))}},updateUrlFormCacheApi:function(e){if(this.enableRequestCache&&o.a.checkUndefined(e)){var t=e.urlFormData;this.urlFormData.forEach((function(e){if(!o.a.strNotBlank(e.content)){var a=t.filter((function(t){return t.name==e.name}));a.length>0&&(e.content=a[0].content)}}))}},updateRawFormCacheApi:function(e){if(this.enableRequestCache&&o.a.checkUndefined(e)){var t=e.rawFormData;this.rawFormData.forEach((function(e){if(!o.a.strNotBlank(e.content)){var a=t.filter((function(t){return t.name==e.name}));a.length>0&&(e.content=a[0].content)}})),this.rawText=e.rawText}},syncFromOAuth2:function(){var e="SELFOAuth"+this.swaggerInstance.id;if(window.localStorage){var t=window.localStorage.getItem(e);if(o.a.strNotBlank(t))return o.a.json5parse(t)}return null},updateFormCacheApi:function(e){if(this.enableRequestCache&&o.a.checkUndefined(e)){var t=e.formData;this.formData.forEach((function(e){if(!o.a.strNotBlank(e.content)){var a=t.filter((function(t){return t.name==e.name}));a.length>0&&(e.content=a[0].content)}}))}},initBodyParameter:function(e){var t=this.globalParameters.filter((function(e){return"header"!=e.in})),a=this.api.parameters,n=[],r=[];if(t.length>0&&t.forEach((function(e){if(o.a.arrNotEmpty(a)){var t=!0;a.forEach((function(a){e.name==a.name&&e.in==a.in&&o.a.strNotBlank(a.txtValue)&&(t=!1)})),t&&n.push(e)}else n.push(e)})),o.a.arrNotEmpty(a)&&a.forEach((function(e){if(o.a.arrNotEmpty(t)){var a=!0;t.forEach((function(t){t.name==e.name&&t.in==e.in&&(o.a.strNotBlank(e.txtValue)||(a=!1))})),a&&r.push(e)}else r.push(e)})),o.a.arrNotEmpty(this.authorizeQueryParameters)&&this.authorizeQueryParameters.forEach((function(e){n.push(e)})),n.length,r.length,o.a.arrNotEmpty(r))if(1==r.filter((function(e){return"body"==e.in})).length){var i=r.filter((function(e){return"body"!=e.in&&"header"!=e.in}));this.addGlobalParameterToRawForm(n),i.length>0&&(this.rawFormFlag=!0,this.addApiParameterToRawForm(i)),o.a.arrNotEmpty(this.rawFormData)&&(this.rawFormFlag=!0),this.showTabRaw(),this.addApiParameterToRaw(r),this.updateRawFormCacheApi(e),this.rawFormFlag&&this.initFirstRawFormValue()}else{r.filter((function(e){return"MultipartFile"==e.schemaValue||"file"==e.schemaValue||"file"==e.type||"formData"==e.in||"formdata"==e.in})).length>0?(this.showTabForm(),this.addGlobalParameterToForm(n),this.addApiParameterToForm(r),this.updateFormCacheApi(e),this.initFirstFormValue()):(this.showTabUrlForm(),this.addGlobalParameterToUrlForm(n),this.addApiParameterToUrlForm(r),this.updateUrlFormCacheApi(e),this.initUrlFormValue())}else"raw"==this.api.contentValue?(this.showTabRaw(),this.initFirstRawFormValue()):(this.showTabUrlForm(),this.addGlobalParameterToUrlForm(n),this.addApiParameterToUrlForm(r),this.updateUrlFormCacheApi(e),this.initUrlFormValue());this.updateScriptFromCache(e),this.updateHeaderFromCacheApi(e),this.hideDynamicParameterTable()},updateScriptFromCache:function(e){o.a.checkUndefined(e)&&o.a.strNotBlank(e.rawScript)&&(this.rawScript=e.rawScript)},hideDynamicParameterTable:function(){this.enableDynamicParameter||(0==this.headerData.length?this.headerTableFlag=!1:this.headerTableFlag=!0,0==this.urlFormData.length?this.urlFormTableFlag=!1:this.urlFormTableFlag=!0,0==this.formData.length?this.formTableFlag=!1:this.formTableFlag=!0,0==this.rawFormData.length?this.rawFormTableFlag=!1:this.rawFormTableFlag=!0),this.initSelectionHeaders(),this.headerResetCalc()},addNewLineHeader:function(){if(this.enableDynamicParameter){var e={id:o.a.randomMd5(),name:"",content:"",require:!1,description:"",enums:null,enumsMode:"default",new:!0};this.addDebugHeader(e)}this.hideDynamicParameterTable()},addDebugHeader:function(e){if(o.a.strNotBlank(e.name)){var t=this.headerData.filter((function(t){return t.name==e.name}));o.a.strBlank(e.content)?0==t.length&&this.headerData.push(e):this.headerData.push(e)}else this.headerData.push(e)},initFirstFormValue:function(){this.addNewLineFormValue(),this.initFormSelections()},initFormSelections:function(e){var t=this;o.a.strNotBlank(e)?0==this.rowFormSelection.selectedRowKeys.filter((function(t){return t==e})).length&&this.rowFormSelection.selectedRowKeys.push(e):this.formData.forEach((function(e){t.rowFormSelection.selectedRowKeys.push(e.id)}))},initRawFormSelections:function(e){var t=this;o.a.strNotBlank(e)?0==this.rowRawFormSelection.selectedRowKeys.filter((function(t){return t==e})).length&&this.rowRawFormSelection.selectedRowKeys.push(e):this.rawFormData.forEach((function(e){t.rowRawFormSelection.selectedRowKeys.push(e.id)}))},initUrlFormSelections:function(e){var t=this;o.a.strNotBlank(e)?0==this.rowUrlFormSelection.selectedRowKeys.filter((function(t){return t==e})).length&&this.rowUrlFormSelection.selectedRowKeys.push(e):this.urlFormData.forEach((function(e){t.rowUrlFormSelection.selectedRowKeys.push(e.id)}))},showTabForm:function(){this.formFlag=!0,this.rawFlag=!1,this.rawTypeFlag=!1,this.formatFlag=!1,this.urlFormFlag=!1,this.requestContentType="form-data",this.toggleBeautifyButtonStatus()},showTabUrlForm:function(){this.urlFormFlag=!0,this.rawFlag=!1,this.rawTypeFlag=!1,this.formFlag=!1,this.requestContentType="x-www-form-urlencoded",this.toggleBeautifyButtonStatus()},showTabRaw:function(){this.rawFlag=!0,this.rawMode=this.api.contentMode,this.rawDefaultText=this.api.contentShowValue,this.rawTypeFlag=!0,this.formFlag=!1,this.urlFormFlag=!1,this.rawText=o.a.toString(this.api.requestValue,""),this.api.xmlRequest&&(this.rawRequestType="application/xml"),this.requestContentType="raw",this.toggleBeautifyButtonStatus()},getEnumOptions:function(e){var t=o.a.propValue("enum",e,null),a=null;if(o.a.checkUndefined(t)){var n=[];t.forEach((function(e){n.push({value:e,label:e})})),a=n}return a},addNewLineFormValue:function(){if(this.enableDynamicParameter){var e={id:o.a.randomMd5(),name:"",type:"text",require:!1,target:null,multipart:!1,content:"",description:"",enums:null,enumsMode:"default",new:!0};this.formData.push(e)}else this.hideDynamicParameterTable()},addGlobalParameterToRawForm:function(e){var t=this;o.a.arrNotEmpty(e)&&e.forEach((function(e){var a={id:o.a.randomMd5(),name:e.name,type:"text",require:!1,target:null,multipart:!1,content:e.value,description:"",enums:null,enumsMode:"default",new:!1};t.rawFormData.push(a)}))},addGlobalParameterToForm:function(e){var t=this;o.a.arrNotEmpty(e)&&e.forEach((function(e){var a={id:o.a.randomMd5(),name:e.name,type:"text",require:!1,target:null,multipart:!1,content:e.value,description:"",enums:null,enumsMode:"default",new:!1};t.formData.push(a)}))},addApiParameterToRaw:function(e){var t=this;if(o.a.arrNotEmpty(e)){var a=e.filter((function(e){return"header"==e.in}));a.length>0&&a.forEach((function(e){var a={id:o.a.randomMd5(),name:e.name,require:e.require,content:e.txtValue,description:o.a.propValue("description",e,""),enums:t.getEnumOptions(e),enumsMode:"default",new:!1};null!=a.enums&&(o.a.strNotBlank(a.content)||(a.content=a.enums[0].value)),t.addDebugHeader(a)}))}},addApiParameterToForm:function(e){var t=this;o.a.arrNotEmpty(e)&&e.forEach((function(e){if("header"==e.in){var a={id:o.a.randomMd5(),name:e.name,require:e.require,content:e.txtValue,description:o.a.propValue("description",e,""),enums:t.getEnumOptions(e),enumsMode:"default",new:!1};null!=a.enums&&(o.a.strNotBlank(a.content)||(a.content=a.enums[0].value)),t.addDebugHeader(a)}else{var n="text",r=!1;"MultipartFile"!=e.schemaValue&&"file"!=e.schemaValue&&"file"!=e.type||(n="file","array"==e.type&&(r=!0));var i={id:o.a.randomMd5(),name:e.name,type:n,require:e.require,target:null,multipart:r,content:e.txtValue,description:o.a.propValue("description",e,""),enums:t.getEnumOptions(e),enumsMode:"default",new:!1};null!=i.enums&&(o.a.strNotBlank(i.content)||(i.content=i.enums[0].value)),t.formData.push(i)}}))},addGlobalParameterToUrlForm:function(e){var t=this;o.a.arrNotEmpty(e)&&e.forEach((function(e){var a={id:o.a.randomMd5(),name:e.name,type:"text",require:!1,target:null,content:e.value,description:"",enums:null,enumsMode:"default",new:!1};t.urlFormData.push(a)}))},addApiParameterToRawForm:function(e){var t=this;o.a.arrNotEmpty(e)&&e.forEach((function(e){if("header"==e.in){var a={id:o.a.randomMd5(),name:e.name,require:e.require,content:e.txtValue,description:o.a.propValue("description",e,""),enums:t.getEnumOptions(e),enumsMode:"default",new:!1};null!=a.enums&&(o.a.strNotBlank(a.content)||(a.content=a.enums[0].value)),t.addDebugHeader(a)}else{var n={id:o.a.randomMd5(),name:e.name,type:"text",require:e.require,target:null,content:e.txtValue,description:o.a.propValue("description",e,""),enums:t.getEnumOptions(e),enumsMode:"default",new:!1};null!=n.enums&&(o.a.strNotBlank(n.content)||(n.content=n.enums[0].value)),t.rawFormData.push(n)}}))},addApiParameterToUrlForm:function(e){var t=this;o.a.arrNotEmpty(e)&&e.forEach((function(e){if("header"==e.in){var a={id:o.a.randomMd5(),name:e.name,require:e.require,content:e.txtValue,description:o.a.propValue("description",e,""),enums:t.getEnumOptions(e),enumsMode:"default",new:!1};null!=a.enums&&(o.a.strNotBlank(a.content)||(a.content=a.enums[0].value)),t.addDebugHeader(a)}else{var n="default";o.a.arrNotEmpty(e.enum)&&"array"==e.type&&(n="multiple");var r={id:o.a.randomMd5(),name:e.name,type:"text",require:e.require,target:null,content:e.txtValue,description:o.a.propValue("description",e,""),enums:t.getEnumOptions(e),enumsMode:n,new:!1};null!=r.enums&&(o.a.strNotBlank(r.content)||(r.content=r.enums[0].value)),t.urlFormData.push(r)}}))},addNewLineUrlFormValue:function(){if(this.enableDynamicParameter){var e={id:o.a.randomMd5(),name:"",type:"text",require:!1,target:null,content:"",description:"",enums:null,enumsMode:"default",new:!0};this.urlFormData.push(e)}else this.hideDynamicParameterTable()},addNewLineRawFormValue:function(){if(this.enableDynamicParameter){var e={id:o.a.randomMd5(),name:"",type:"text",require:!1,target:null,content:"",description:"",enums:null,enumsMode:"default",new:!0};this.rawFormData.push(e)}else this.hideDynamicParameterTable()},initFirstRawFormValue:function(){this.addNewLineRawFormValue(),this.initRawFormSelections()},initUrlFormValue:function(){this.addNewLineUrlFormValue(),this.initUrlFormSelections()},initShowFormTable:function(){"x-www-form-urlencoded"==this.requestContentType?(this.urlFormFlag=!0,this.formFlag=!1,this.rawFlag=!1,this.rawTypeFlag=!1):"form-data"==this.requestContentType?(this.formFlag=!0,this.urlFormFlag=!1,this.rawFlag=!1,this.rawTypeFlag=!1):"raw"==this.requestContentType&&(this.rawFlag=!0,this.rawTypeFlag=!0,this.urlFormFlag=!1,this.formFlag=!1),this.toggleBeautifyButtonStatus()},initSelectionHeaders:function(e){var t=this;o.a.strNotBlank(e)?0==this.rowSelection.selectedRowKeys.filter((function(t){return t==e})).length&&this.rowSelection.selectedRowKeys.push(e):this.headerData.forEach((function(e){t.rowSelection.selectedRowKeys.push(e.id)}))},headerContentEnumChnage:function(e,t){var a=t.context.$attrs["data-key"];this.headerContentChnageUpdate(e,a)},headerContentChnage:function(e){var t=e.target.value,a=e.target.getAttribute("data-key");this.headerContentChnageUpdate(t,a)},headerContentChnageUpdate:function(e,t){var a=this.headerData.filter((function(e){return e.id==t}))[0];a.new?(this.headerData.forEach((function(t){t.id==a.id&&(t.content=e,t.new=!1)})),this.addNewLineHeader()):this.headerData.forEach((function(t){t.id==a.id&&(t.content=e,t.new=!1)})),this.initSelectionHeaders(a.id),this.headerResetCalc()},headerNameFilterOption:function(e,t){return t.componentOptions.children[0].text.toUpperCase().indexOf(e.toUpperCase())>=0},headerSelect:function(e,t){this.headerSelectName=e},headerSearch:function(e){this.headerSelectName=e},headerNameChange:function(e){var t=this;e.new?(this.headerData.forEach((function(a){a.id==e.id&&(a.name=t.headerSelectName,a.new=!1)})),this.addNewLineHeader()):this.headerData.forEach((function(a){a.id==e.id&&(a.name=t.headerSelectName,a.new=!1)})),this.initSelectionHeaders(e.id),this.headerResetCalc()},headerDelete:function(e){var t=[];this.headerData.forEach((function(a){a.id!=e.id&&t.push(a)})),this.headerData=t,this.headerResetCalc()},headerResetCalc:function(){var e=this.headerData.filter((function(e){return 0==e.new}));e.length>0?(this.headerCountFlag=!0,this.headerCount=e.length):(this.headerCountFlag=!1,this.headerCount=0)},requestContentTypeChange:function(e){this.requestContentType=e.target.value,this.initShowFormTable()},formDelete:function(e){var t=[];this.formData.forEach((function(a){a.id!=e.id&&t.push(a)})),this.formData=t},formFileUploadClick:function(e){document.getElementById("file"+e.id).click()},formNameChange:function(e){var t=e.target.value,a=e.target.getAttribute("data-key"),n=this.formData.filter((function(e){return e.id==a}))[0];n.new?(this.formData.forEach((function(e){e.id==n.id&&(e.name=t,e.new=!1)})),this.addNewLineFormValue()):this.formData.forEach((function(e){e.id==n.id&&(e.name=t,e.new=!1)})),this.initFormSelections(n.id)},formTypeChange:function(e,t){var a=e.split("-"),n=a[0],r=a[1];this.formData.forEach((function(e){e.id==r&&(e.content="",e.type=n)}))},formFileChange:function(e){for(var t=e.target.files,a=[],n=0;n<t.length;n++)a.push(t[n].name);var r=a.join(","),i=e.target,o=i.getAttribute("data-key"),s=this.formData.filter((function(e){return e.id==o}))[0];s.new?(this.formData.forEach((function(e){e.id==s.id&&(e.content=r,e.target=i,e.new=!1)})),this.addNewLineFormValue()):this.formData.forEach((function(e){e.id==s.id&&(e.content=r,e.target=i,e.new=!1)})),this.initFormSelections(s.id)},formContentUpdate:function(e,t){var a=this.formData.filter((function(e){return e.id==t}))[0];a.new?(this.formData.forEach((function(t){t.id==a.id&&(t.content=e,t.new=!1)})),this.addNewLineFormValue()):this.formData.forEach((function(t){t.id==a.id&&(t.content=e,t.new=!1)})),this.initFormSelections(a.id)},formContentEnumChange:function(e,t){var a=t.context.$attrs["data-key"];this.formContentUpdate(e,a)},formContentChange:function(e){var t=e.target.value,a=e.target.getAttribute("data-key");this.formContentUpdate(t,a)},rawFormDelete:function(e){var t=[];this.rawFormData.forEach((function(a){a.id!=e.id&&t.push(a)})),this.rawFormData=t},urlFormDelete:function(e){var t=[];this.urlFormData.forEach((function(a){a.id!=e.id&&t.push(a)})),this.urlFormData=t},rawFormNameChange:function(e){var t=e.target.value,a=e.target.getAttribute("data-key"),n=this.rawFormData.filter((function(e){return e.id==a}))[0];n.new?(this.rawFormData.forEach((function(e){e.id==n.id&&(e.name=t,e.new=!1)})),this.addNewLineRawFormValue()):this.rawFormData.forEach((function(e){e.id==n.id&&(e.name=t,e.new=!1)})),this.initRawFormSelections(n.id)},urlFormNameChange:function(e){var t=e.target.value,a=e.target.getAttribute("data-key"),n=this.urlFormData.filter((function(e){return e.id==a}))[0];n.new?(this.urlFormData.forEach((function(e){e.id==n.id&&(e.name=t,e.new=!1)})),this.addNewLineUrlFormValue()):this.urlFormData.forEach((function(e){e.id==n.id&&(e.name=t,e.new=!1)})),this.initUrlFormSelections(n.id)},rawFormContentUpdate:function(e,t){var a=this.rawFormData.filter((function(e){return e.id==t}))[0];a.new?(this.rawFormData.forEach((function(t){t.id==a.id&&(t.content=e,t.new=!1)})),this.addNewLineRawFormValue()):this.rawFormData.forEach((function(t){t.id==a.id&&(t.content=e,t.new=!1)})),this.initRawFormSelections(a.id)},rawFormContentEnumChange:function(e,t){var a=t.context.$attrs["data-key"];this.rawFormContentUpdate(e,a)},rawFormContentChange:function(e){var t=e.target.value,a=e.target.getAttribute("data-key");this.rawFormContentUpdate(t,a)},urlFormContentUpdate:function(e,t){var a=this.urlFormData.filter((function(e){return e.id==t}))[0];a.new?(this.urlFormData.forEach((function(t){t.id==a.id&&(t.content=e,t.new=!1)})),this.addNewLineUrlFormValue()):this.urlFormData.forEach((function(t){t.id==a.id&&(t.content=e,t.new=!1)})),this.initUrlFormSelections(a.id)},urlFormContentEnumChange:function(e,t){if(o.a.checkUndefined(t)){var a;a=Array.isArray(t)?t[0].context.$attrs["data-key"]:t.context.$attrs["data-key"],this.urlFormContentUpdate(e,a)}},urlFormContentChange:function(e){var t=e.target.value,a=e.target.getAttribute("data-key");this.urlFormContentUpdate(t,a)},rawMenuClick:function(e){var t=e.item,a=e.key;e.keyPath,this.rawMode=t.$el.getAttribute("data-mode"),this.rawRequestType=t.$el.getAttribute("data-mode-type"),this.rawDefaultText=a,this.toggleBeautifyButtonStatus()},beautifyJson:function(){var e=this.rawText;if(o.a.strNotBlank(e))try{var t=o.a.json5stringify(o.a.json5parse(e));this.rawText=t}catch(e){}},toggleBeautifyButtonStatus:function(){var e=!1;this.rawFlag&&"json"==this.rawMode&&(e=!0),this.formatFlag=e},rawScriptChange:function(e){this.rawScript=e},rawChange:function(e){this.rawText=e},sendRestfulApi:function(e){e.preventDefault();var t=this.validateCommonHeaders();t.validate?this.rawFlag?this.debugSendRawRequest():this.formFlag?this.debugSendFormRequest():this.urlFormFlag&&this.debugSendUrlFormRequest():this.$message.info(t.message)},callChildEditorShow:function(){this.bigFlag||this.$refs.childDebugResponse.showEditorFieldDescription()},debugHeaders:function(){var e=this,t={},a=this.api;if(null!=a.produces&&null!=a.produces&&a.produces.length>0){var n=a.produces[0];t.Accept=n}return this.headerData.forEach((function(a){a.new||e.rowSelection.selectedRowKeys.filter((function(e){return e==a.id})).length>0&&o.a.strNotBlank(a.name)&&(o.a.isChinese(a.content)?t[a.name]=encodeURIComponent(a.content):t[a.name]=o.a.toString(a.content,""))})),t["Request-Origion"]="Knife4j",o.a.checkUndefined(t["Content-Type"])||(this.rawFlag?t["Content-Type"]=this.rawRequestType:this.urlFormFlag?t["Content-Type"]="application/x-www-form-urlencoded":this.formFlag&&(this.validateFormDataContaintsFile()?t["Content-Type"]="multipart/form-data":t["Content-Type"]="application/x-www-form-urlencoded")),o.a.checkUndefined(this.routeHeader)&&(t["knfie4j-gateway-request"]=this.routeHeader),this.swaggerInstance.desktop&&(t["knife4j-gateway-code"]=this.swaggerInstance.desktopCode),t},debugRawFormParams:function(){var e=this,t={};return this.rawFormData.forEach((function(a){a.new||e.rowRawFormSelection.selectedRowKeys.filter((function(e){return e==a.id})).length>0&&o.a.strNotBlank(a.name)&&(t[a.name]=a.content)})),t},debugUrlFormParams:function(){var e=this,t={};return this.urlFormData.forEach((function(a){a.new||e.rowUrlFormSelection.selectedRowKeys.filter((function(e){return e==a.id})).length>0&&o.a.strNotBlank(a.name)&&(t[a.name]=a.content)})),t},debugFormDataParams:function(e){var t=this,a={url:"",params:{}},n=this.debugUrl;if(e){var r=new FormData;this.formData.forEach((function(e){if(!e.new&&(t.rowFormSelection.selectedRowKeys.filter((function(t){return t==e.id})).length>0&&o.a.strNotBlank(e.name)))if("text"==e.type)if(t.debugPathFlag)if(-1==t.debugPathParams.indexOf(e.name))o.a.strNotBlank(e.content)&&r.append(e.name,e.content);else{var a="{"+e.name+"}";n=n.replace(a,e.content)}else o.a.strNotBlank(e.content)&&r.append(e.name,e.content);else if(o.a.checkUndefined(e.target)){var i=e.target.files;if(i.length>0)for(var s=0;s<i.length;s++)r.append(e.name,i[s])}})),a.params=r}else{var i={};this.formData.forEach((function(e){if(!e.new&&(t.rowFormSelection.selectedRowKeys.filter((function(t){return t==e.id})).length>0&&o.a.strNotBlank(e.name)))if(t.debugPathFlag)if(-1==t.debugPathParams.indexOf(e.name))i[e.name]=e.content;else{var a="{"+e.name+"}";n=n.replace(a,e.content)}else i[e.name]=e.content})),a.params=i}return a.url=n,a},debugStreamFlag:function(){var e=!1,t=this.api;null!=t.produces&&null!=t.produces&&t.produces.length>0&&(t.produces[0],e=o.a.binaryContentType(t.produces,null).binary);return e},validateCommonHeaders:function(){for(var e=!0,t="",a=0;a<this.headerData.length;a++){var n=this.headerData[a];if(!n.new)if(this.rowSelection.selectedRowKeys.filter((function(e){return e==n.id})).length>0&&o.a.strNotBlank(n.name)&&n.require&&!o.a.strNotBlank(n.content)){e=!1,t=this.i18n.validate.header+n.name+this.i18n.validate.notEmpty;break}}return{validate:e,message:t}},validateFormData:function(){for(var e=!0,t="",a=0;a<this.formData.length;a++){var n=this.formData[a];if(!n.new)if(this.rowFormSelection.selectedRowKeys.filter((function(e){return e==n.id})).length>0&&o.a.strNotBlank(n.name)&&n.require)if("text"==n.type){if(!o.a.strNotBlank(n.content)){e=!1,t=n.name+this.i18n.validate.notEmpty;break}}else if(null==n.target){e=!1,t=n.name+this.i18n.validate.fileNotEmpty;break}}return{validate:e,message:t}},validateRawForm:function(){for(var e=!0,t="",a=0;a<this.rawFormData.length;a++){var n=this.rawFormData[a];if(!n.new)if(this.rowRawFormSelection.selectedRowKeys.filter((function(e){return e==n.id})).length>0&&o.a.strNotBlank(n.name)&&n.require&&!o.a.strNotBlank(n.content)){e=!1,t=n.name+this.i18n.validate.notEmpty;break}}return{validate:e,message:t}},validateUrlForm:function(){for(var e=!0,t="",a=0;a<this.urlFormData.length;a++){var n=this.urlFormData[a];if(!n.new)if(this.rowUrlFormSelection.selectedRowKeys.filter((function(e){return e==n.id})).length>0&&o.a.strNotBlank(n.name)&&n.require&&!o.a.strNotBlank(n.content)){e=!1,t=n.name+this.i18n.validate.notEmpty;break}}return{validate:e,message:t}},validateFormDataContaintsFile:function(){var e=this,t=!1;return this.formData.forEach((function(a){a.new||e.rowFormSelection.selectedRowKeys.filter((function(e){return e==a.id})).length>0&&"file"==a.type&&(t=!0)})),t},checkUrlParams:function(e){var t=e.indexOf("?"),a={result:!1,params:{},url:e};if(t>-1){var n=e.substring(t+1);if(a.url=e.substring(0,t),a.result=!0,o.a.strNotBlank(n))n.split("&").forEach((function(e){if(o.a.strNotBlank(e)){var t=e.split("=");2==t.length&&(a.params[t[0]]=t[1])}}))}return a},debugSendHasCookie:function(e){var t=!1;if(o.a.checkUndefined(e)){var a=Object.keys(e);if(o.a.arrNotEmpty(a))if(a.filter((function(e){return"cookie"===e.toLocaleLowerCase()})).length>0){var n=e.Cookie;o.a.strNotBlank(n)&&(document.cookie=n,t=!0)}}return t},applyRequestParams:function(e,t){var a=null,n=null;return["post","put","patch"].includes(t.toLowerCase())?o.a.checkUndefined(e)&&(a=i.a.stringify(e)):n=e,{data:a,params:n}},debugCheckUrl:function(e){var t=e;try{if(new RegExp(".*?({.*?})$","ig").test(e)){var a=RegExp.$1;t=e.replace(a,"")}}catch(e){window.console}return t},debugSendUrlFormRequest:function(){var e=this,t=this.validateUrlForm();if(t.validate){this.debugLoading=!0,this.debugSend=!0;var a=this.debugHeaders(),r=this.debugUrl,i=this.api.methodType.toLowerCase(),s=this.debugUrlFormParams();if(this.debugPathFlag){var l={};for(var u in this.debugPathParams.forEach((function(e){var t="{"+e+"}",a=o.a.getValue(s,e,"",!0);r=r.replace(t,a)})),s)-1==this.debugPathParams.indexOf(u)&&(l[u]=s[u]);s=l}var c=this.checkUrlParams(r);c.result&&(r=c.url,s=Object.assign(s,c.params));var d="";this.enableHost&&(d=this.enableHostText);var h=this.applyRequestParams(s,i),p={baseURL:d,url:this.debugCheckUrl(r),method:i,headers:a,params:h.params,timeout:0,withCredentials:this.debugSendHasCookie(a),data:h.data};this.oas2?this.debugStreamFlag()&&(p=Object(n.a)(Object(n.a)({},p),{},{responseType:"blob"})):p=Object(n.a)(Object(n.a)({},p),{},{responseType:"blob"});var f=m.a.create();f.interceptors.request.use((function(e){var t=e.url;if("get"===e.method&&e.params){t+="?";for(var a=0,n=Object.keys(e.params);a<n.length;a++){var r=n[a];o.a.strNotBlank(e.params[r])&&(t+="".concat(encodeURIComponent(r),"=").concat(encodeURIComponent(e.params[r]),"&"))}t=t.substring(0,t.length-1),e.params={}}return e.url=t,e}));var g=new Date;f.request(p).then((function(t){e.debugLoading=!1,e.handleDebugSuccess(g,new Date,t)})).catch((function(t){e.debugLoading=!1,t.response?e.handleDebugError(g,new Date,t.response):e.$message.error(t.message)}))}else this.$message.info(t.message)},debugSendFormRequest:function(){var e=this,t=this.validateFormData();if(t.validate){this.debugLoading=!0,this.debugSend=!0;var a=this.debugHeaders(),r=this.debugUrl,i=this.api.methodType.toLowerCase(),o=this.validateFormDataContaintsFile(),s=this.debugFormDataParams(o);r=s.url;var l=s.params,u="";this.enableHost&&(u=this.enableHostText);var c={baseURL:u,url:this.debugCheckUrl(r),method:i,headers:a,timeout:0,withCredentials:this.debugSendHasCookie(a),data:null};if(o)c=Object(n.a)(Object(n.a)({},c),{},{data:l});else{var d=this.checkUrlParams(r);d.result&&(r=d.url,l=Object.assign(l,d.params)),c=Object(n.a)(Object(n.a)({},c),{},{params:l})}this.debugStreamFlag()&&(c=Object(n.a)(Object(n.a)({},c),{},{responseType:"blob"}));var h=m.a.create(),p=new Date;h.request(c).then((function(t){e.debugLoading=!1,e.handleDebugSuccess(p,new Date,t)})).catch((function(t){e.debugLoading=!1,t.response?e.handleDebugError(p,new Date,t.response):e.$message.error(t.message)}))}else this.$message.info(t.message)},debugSendRawRequest:function(){var e=this,t=this.validateRawForm();if(t.validate){this.debugLoading=!0,this.debugSend=!0;var a=this.debugHeaders(),r=this.debugUrl,i=this.api.methodType.toLowerCase(),s=this.rawText,l=this.debugRawFormParams();if(this.debugPathFlag){var u={};for(var c in this.debugPathParams.forEach((function(e){var t="{"+e+"}",a=o.a.getValue(l,e,"",!0);r=r.replace(t,a)})),l)-1==this.debugPathParams.indexOf(c)&&(u[c]=l[c]);l=u}var d=this.checkUrlParams(r);d.result&&(r=d.url,l=Object.assign(l,d.params));var h="";this.enableHost&&(h=this.enableHostText);var p={baseURL:h,url:this.debugCheckUrl(r),method:i,headers:a,params:l,data:s,withCredentials:this.debugSendHasCookie(a),timeout:0};this.debugStreamFlag()&&(p=Object(n.a)(Object(n.a)({},p),{},{responseType:"blob"}));var f=new Date;m.a.create().request(p).then((function(t){e.debugLoading=!1,e.handleDebugSuccess(f,new Date,t)})).catch((function(t){e.debugLoading=!1,t.response?e.handleDebugError(f,new Date,t.response):e.$message.error(t.message)}))}else this.$message.info(t.message)},executeAfterScript:function(e){if(o.a.strNotBlank(this.rawScript)){var t=this.swaggerInstance.id,a={allgroupids:this.swaggerInstance.allGroupIds,groupid:t,response:{data:e.data,headers:e.headers}},n=new d(a);try{new Function("ke",this.rawScript)(n),setTimeout((function(){n.global.action()}),1e3)}catch(e){}}},handleDebugSuccess:function(e,t,a){this.bigFlag=!1,this.bigBlobFlag=!1,this.setResponseBody(a),this.setResponseHeaders(a.headers),this.setResponseRaw(a),this.setResponseStatus(e,t,a),this.setResponseCurl(a.request),this.callChildEditorShow(),this.executeAfterScript(a),this.storeApiParams()},handleDebugError:function(e,t,a){this.bigFlag=!1,this.bigBlobFlag=!1,this.setResponseBody(a),this.setResponseHeaders(a.headers),this.setResponseRaw(a),this.setResponseStatus(e,t,a),this.setResponseCurl(a.request),this.callChildEditorShow(),this.storeApiParams()},storeApiParams:function(){if(this.enableRequestCache){var e={headerData:[],formData:[],urlFormData:[],rawFormData:[],rawText:""},t=l.a.debugCacheApiId+this.api.id;e.headerData=this.headerData.filter((function(e){return 0==e.new})),e.formData=this.formData.filter((function(e){return 0==e.new})),e.urlFormData=this.urlFormData.filter((function(e){return 0==e.new})),e.rawFormData=this.rawFormData.filter((function(e){return 0==e.new})),e.rawText=this.rawText,e.rawScript=this.rawScript,this.$localStore.setItem(t,e)}},setResponseHeaders:function(e){var t=[];if(o.a.checkUndefined(e))for(var a in e){var n={id:o.a.randomMd5(),name:a,value:e[a]};t.push(n)}this.responseHeaders=t},setResponseRaw:function(e){if(o.a.checkUndefined(e)){var t=e.request;if(e.headers,o.a.checkUndefined(t)&&"blob"!=t.responseType){var a=o.a.toString(t.responseText,"");this.responseRawText=a}}},setResponseStatus:function(e,t,a){if(o.a.checkUndefined(a)){var n=a.request;if(o.a.checkUndefined(n)){var r="",i=t.getTime()-e.getTime(),s=n.status;if(i>1e3)r=Math.floor(i/1e3).toFixed(1)+"s";else r=i+"ms";var l=0;"blob"==n.responseType?l=n.response.size:o.a.checkUndefined(n.responseText)&&(l=n.responseText.gblen()),this.responseStatus={code:s,cost:r,size:l}}}},setResponseCurl:function(e){var t=this,a=this,n=this.debugCheckUrl(this.debugUrl),r=new Array,i="http",s=window.location.href;new RegExp("^https.*","ig").test(s)&&(i="https");var l="";l=new RegExp("^(http|https):.*","ig").test(this.api.host)?this.api.host:i+"://"+this.api.host,this.enableHost&&(l=this.enableHostText),n.startWith("/")||(l+="/"),l+=n,r.push("curl"),r.push("-X",this.api.methodType.toUpperCase());var u=this.debugHeaders(),c=[];if(c.push("knfie4j-gateway-request"),c.push("knife4j-gateway-code"),c.push("Request-Origion"),o.a.checkUndefined(u))for(var d in u)c.includes(d)||(r.push("-H "),r.push('"'+d+":"+u[d]+'"'));if(this.rawFlag){var h=this.debugRawFormParams(),m=[];if(o.a.checkUndefined(h))for(var p in h)if(a.debugPathFlag)if(-1==a.debugPathParams.indexOf(p))m.push(p+"="+o.a.toString(h[p],""));else{var f="{"+p+"}",g=o.a.toString(h[p],"");l=l.replace(f,g)}else m.push(p+"="+o.a.toString(h[p],""));var w=m.join("&");if(o.a.strNotBlank(w)&&(l=-1==l.indexOf("?")?l+"?"+w:l+"&"+w),o.a.strNotBlank(this.rawText))try{var b=JSON.parse(this.rawText),F=JSON.stringify(b).replace(/\\n/g,"").replace(/"/g,'\\"');r.push("-d"),r.push('"'+F+'"')}catch(e){F=this.rawText.replace(/\\n/g,"").replace(/"/g,'\\"'),r.push("-d"),r.push('"'+F+'"')}}else if(this.urlFormFlag){var y=this.debugUrlFormParams();if(o.a.checkUndefined(y)){for(var p in m=[],y)a.debugPathFlag?-1==a.debugPathParams.indexOf(p)?m.push(p+"="+o.a.toString(y[p],"")):(f="{"+p+"}",g=o.a.toString(y[p],""),l=l.replace(f,g)):m.push(p+"="+o.a.toString(y[p],""));w=m.join("&"),o.a.strNotBlank(w)&&("get"==this.api.methodType.toLowerCase()||"delete"==this.api.methodType.toLowerCase()?l=-1==l.indexOf("?")?l+"?"+w:l+"&"+w:(r.push("--data-urlencode "),r.push('"'+w+'"')))}}else if(this.formFlag){var v=this.debugFormCurlParams();if(o.a.checkUndefined(v))if(this.validateFormDataContaintsFile())this.formData.forEach((function(e){e.new||t.rowFormSelection.selectedRowKeys.filter((function(t){return t==e.id})).length>0&&o.a.strNotBlank(e.name)&&(r.push("-F "),"text"==e.type?r.push('"'+e.name+"="+o.a.toString(e.content,"")+'"'):r.push('"'+e.name+"=@"+e.content+'"'))}));else{for(var p in m=[],v)a.debugPathFlag?-1==a.debugPathParams.indexOf(p)?m.push(p+"="+o.a.toString(v[p],"")):(f="{"+p+"}",g=o.a.toString(v[p],""),l=l.replace(f,g)):m.push(p+"="+o.a.toString(v[p],""));w=m.join("&"),o.a.strNotBlank(w)&&("get"==this.api.methodType.toLowerCase()||"delete"==this.api.methodType.toLowerCase()?l=-1==l.indexOf("?")?l+"?"+w:l+"&"+w:(r.push("--data-urlencode "),r.push('"'+w+'"')))}}r.push('"'+encodeURI(l)+'"'),this.responseCurlText=r.join(" ")},debugFormCurlParams:function(){var e=this,t={};return this.formData.forEach((function(a){a.new||e.rowFormSelection.selectedRowKeys.filter((function(e){return e==a.id})).length>0&&o.a.strNotBlank(a.name)&&(t[a.name]=a.content)})),t},setResponseBody:function(e){var t=this;if(o.a.checkUndefined(e)){var a=e.request,n=e.headers;if(o.a.checkUndefined(a)){var r=o.a.propValue("content-type",n,""),i=o.a.propValue("content-disposition",n,"");if("blob"==a.responseType||o.a.strNotBlank(i))if("application/json"==e.data.type||"application/xml"==e.data.type||"text/html"==e.data.type||"text/plain"==e.data.type){var s=new FileReader;s.onload=function(e){var r={responseText:e.target.result,response:e.target.result,responseType:"",status:a.status,statusText:a.statusText,readyState:a.readyState,timeout:a.timeout,withCredentials:a.withCredentials};t.setResponseJsonBody(r,n)},s.readAsText(e.data)}else if("text/html"==r||"text/plain"==r||"application/xml"==r)this.setResponseJsonBody(a,n);else{var l="Knife4j.txt";if(o.a.strNotBlank(i)||(i=o.a.propValue("content-disposition",n,"")),o.a.strNotBlank(i))for(var u=i.split(";"),c=0;c<u.length;c++){var d=u[c];if(null!=d&&""!=d){var h=d.split("=");if(null!=h&&h.length>0){var m=h[0];null!=m&&null!=m&&""!=m&&"filename"==m.toLowerCase()&&(l=decodeURIComponent(h[1]))}}}var p=!1;if(-1!=r.indexOf("image"))p=!0;else{["bmp","jpg","png","tif","gif","pcx","tga","exif","fpx","svg","psd","cdr","pcd","dxf","ufo","eps","ai","raw","WMF","webp"].forEach((function(e){-1!=l.indexOf(e)&&(p=!0)}))}var f=this.api.produces,g=!1;o.a.arrNotEmpty(f)&&f.forEach((function(e){-1!=e.indexOf("image")&&(g=!0)})),p||(p=g);var w=window.URL.createObjectURL(e.data);this.responseContent={text:"",mode:"blob",blobFlag:!0,imageFlag:p,blobFileName:l,blobUrl:w,base64:""}}else this.setResponseJsonBody(a,n)}}},setResponseJsonBody:function(e,t){var a="",n="",r=this.getContentTypeByHeaders(t);if("json"==r){var i=(e.responseText.gblen()/1024).toFixed(1);if(this.bigBlobFlag=i>300,i>150){this.bigFlag=!0;var s=this.i18n.message.debug.contentToBig;this.$message.info(s),r="text"}else if(o.a.strNotBlank(e.responseText))try{a=o.a.json5stringify(o.a.json5parse(e.responseText))}catch(t){a=e.responseText,r="text"}if(o.a.strNotBlank(e.responseText)&&!this.bigFlag&&e.responseText.indexOf("data:image")>-1)if(new RegExp('.*?"(data:image.*?base64.*?)".*',"ig").test(e.responseText))n=RegExp.$1}else if("xml"==r){var l=e.responseText;a=o.a.strNotBlank(l)?(new F).xml(l):l}else a=e.responseText;this.responseContent={text:a,mode:r,blobFlag:!1,imageFlag:!1,blobFileName:"",blobUrl:"",base64:n}},debugEditorChange:function(e){o.a.checkUndefined(this.responseContent)&&(this.responseContent.text=e)},getContentTypeByHeaders:function(e){var t="json",a=o.a.propValue("Content-Type",e,"");return o.a.strNotBlank(a)||(a=o.a.propValue("content-type",e,"")),o.a.strNotBlank(a)&&(t=a.indexOf("json")>=0?"json":a.indexOf("xml")>=0?"xml":a.indexOf("text/html")>=0?"html":"text"),t},debugShowFieldDescriptionChange:function(e){this.responseFieldDescriptionChecked=e}}},v=a("2877"),C=Object(v.a)(y,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"knife4j-debug"},[a("a-spin",{attrs:{tip:"Loading...",spinning:e.debugLoading}},[a("div",{staticClass:"spin-content"},[a("a-row",[a("a-col",{class:"knife4j-debug-api-"+e.api.methodType.toLowerCase(),attrs:{span:24}},[a("a-input-group",{attrs:{compact:""}},[a("span",{staticClass:"knife4j-api-summary-method"},[e.api.securityFlag?a("a-icon",{staticStyle:{"font-size":"16px"},attrs:{type:"unlock"}}):e._e(),e._v(" "+e._s(e.api.methodType))],1),a("a-input",{style:e.debugUrlStyle,attrs:{value:e.debugUrl},on:{change:e.debugUrlChange}}),a("a-button",{staticClass:"knife4j-api-send",attrs:{type:"primary"},domProps:{innerHTML:e._s(e.$t("debug.send"))},on:{click:e.sendRestfulApi}},[e._v("发 送")]),e.enableReloadCacheParameter?a("a-button",{on:{click:e.reloadCacheParameter}},[e._v("刷新变量")]):e._e()],1)],1)],1),a("a-row",{staticClass:"knife4j-debug-tabs"},[a("a-tabs",{attrs:{defaultActiveKey:"2"}},[a("a-tab-pane",{key:"1"},[a("template",{slot:"tab"},[a("span",[e.headerCountFlag?a("a-tag",{staticClass:"knife4j-debug-param-count"},[e._v(e._s(e.headerCount))]):e._e(),a("span",{domProps:{innerHTML:e._s(e.$t("debug.headers"))}},[e._v("请求头部")])],1)]),e.headerTableFlag?a("a-table",{attrs:{bordered:"",size:"small",rowSelection:e.rowSelection,columns:e.headerColumn,pagination:e.pagination,dataSource:e.headerData,rowKey:"id"},scopedSlots:e._u([{key:"headerName",fn:function(t,n){return[a("a-auto-complete",{staticStyle:{width:"100%"},attrs:{value:t,filterOption:e.headerNameFilterOption,allowClear:e.allowClear,dataSource:e.headerAutoOptions,placeholder:e.$t("debug.tableHeader.holderName")},on:{select:e.headerSelect,search:e.headerSearch,change:function(t){return e.headerNameChange(n)}}})]}},{key:"headerValue",fn:function(t,n){return[null!=n.enums?a("a-row",[a("a-select",{staticStyle:{width:"100%"},attrs:{mode:n.enumsMode,defaultValue:t,"data-key":n.id,options:n.enums},on:{change:e.headerContentEnumChnage}})],1):a("a-row",[a("a-input",{class:"knife4j-debug-param-require"+n.require,attrs:{placeholder:e.$t("debug.tableHeader.holderValue"),"data-key":n.id,defaultValue:t},on:{change:e.headerContentChnage}})],1)]}},{key:"operation",fn:function(t,n){return a("a-row",{},[n.new?e._e():a("a-button",{attrs:{type:"link"},domProps:{innerHTML:e._s(e.$t("debug.tableHeader.holderDel"))},on:{click:function(t){return e.headerDelete(n)}}},[e._v("删除")])],1)}}],null,!1,1327304640)}):e._e()],2),a("a-tab-pane",{key:"2",attrs:{tab:e.$t("debug.params"),forceRender:""}},[a("a-row",{staticClass:"knife4j-debug-request-type"},[a("div",{staticClass:"knife4j-debug-request-content-type-float"},[a("a-radio-group",{staticClass:"knife4j-debug-request-content-type",on:{change:e.requestContentTypeChange},model:{value:e.requestContentType,callback:function(t){e.requestContentType=t},expression:"requestContentType"}},[a("a-radio",{attrs:{value:"x-www-form-urlencoded"}},[e._v("x-www-form-urlencoded")]),a("a-radio",{attrs:{value:"form-data"}},[e._v("form-data")]),a("a-radio",{attrs:{value:"raw"}},[e._v("raw")])],1)],1),a("div",{staticClass:"knife4j-debug-request-content-type-float"},[a("div",{staticClass:"knife4j-debug-request-content-type-raw"},[e.rawTypeFlag?a("a-dropdown",{attrs:{trigger:["click"]}},[a("span",{staticClass:"knife4j-debug-raw-span"},[a("span",[e._v(e._s(e.rawDefaultText))]),a("a-icon",{attrs:{type:"down"}})],1),a("a-menu",{attrs:{slot:"overlay"},on:{click:e.rawMenuClick},slot:"overlay"},[a("a-menu-item",{key:"Auto",attrs:{"data-mode-type":"application/json","data-mode":"text"}},[e._v("Auto")]),a("a-menu-item",{key:"Text(text/plain)",attrs:{"data-mode-type":"text/plain","data-mode":"text"}},[e._v("Text(text/plain)")]),a("a-menu-item",{key:"JSON(application/json)",attrs:{"data-mode-type":"application/json","data-mode":"json"}},[e._v("JSON(application/json)")]),a("a-menu-item",{key:"Javascript(application/Javascript)",attrs:{"data-mode-type":"application/javascript","data-mode":"javascript"}},[e._v("Javascript(application/Javascript)")]),a("a-menu-item",{key:"XML(application/xml)",attrs:{"data-mode-type":"application/xml","data-mode":"xml"}},[e._v("XML(application/xml)")]),a("a-menu-item",{key:"XML(text/xml)",attrs:{"data-mode-type":"text/xml","data-mode":"xml"}},[e._v("XML(text/xml)")]),a("a-menu-item",{key:"HTML(text/html)",attrs:{"data-mode-type":"text/html","data-mode":"html"}},[e._v("HTML(text/html)")])],1)],1):e._e()],1)]),e.formatFlag?a("div",{staticClass:"knife4j-debug-request-content-type-beautify"},[a("a",{on:{click:e.beautifyJson}},[e._v("Beautify")])]):e._e()]),e.formFlag?a("a-row",[e.formTableFlag?a("a-table",{attrs:{bordered:"",size:"small",rowSelection:e.rowFormSelection,columns:e.formColumn,pagination:e.pagination,dataSource:e.formData,rowKey:"id"},scopedSlots:e._u([{key:"formName",fn:function(t,n){return[a("a-input",{attrs:{placeholder:n.description,"data-key":n.id,defaultValue:t},on:{change:e.formNameChange}})]}},{key:"formType",fn:function(t,n){return[a("a-select",{staticStyle:{width:"100%"},attrs:{defaultValue:t+"-"+n.id},on:{change:e.formTypeChange}},[a("a-select-option",{attrs:{value:"text-"+n.id}},[a("span",{domProps:{innerHTML:e._s(e.$t("debug.form.itemText"))}},[e._v("文本")])]),a("a-select-option",{attrs:{value:"file-"+n.id}},[a("span",{domProps:{innerHTML:e._s(e.$t("debug.form.itemFile"))}},[e._v("文件")])])],1)]}},{key:"formValue",fn:function(t,n){return["text"==n.type?a("div",[null!=n.enums?a("a-row",[a("a-select",{staticStyle:{width:"100%"},attrs:{mode:n.enumsMode,defaultValue:t,"data-key":n.id,options:n.enums},on:{change:e.formContentEnumChange}})],1):a("a-row",[a("a-input",{class:"knife4j-debug-param-require"+n.require,attrs:{placeholder:n.description,"data-key":n.id,defaultValue:t},on:{change:e.formContentChange}})],1)],1):a("div",[a("div",[n.multipart?a("div",{staticStyle:{display:"none"}},[a("input",{staticStyle:{display:"none"},attrs:{id:"file"+n.id,multiple:"",type:"file","data-key":n.id},on:{change:e.formFileChange}})]):a("div",{staticStyle:{display:"none"}},[a("input",{staticStyle:{display:"none"},attrs:{id:"file"+n.id,type:"file","data-key":n.id},on:{change:e.formFileChange}})]),a("a-input-group",{attrs:{compact:""}},[a("a-input",{class:"knife4j-debug-param-require"+n.require,staticStyle:{width:"80%"},attrs:{value:n.content,disabled:""}}),a("a-button",{staticClass:"knife4j-api-send",staticStyle:{width:"80px"},attrs:{type:"primary"},domProps:{innerHTML:e._s(e.$t("debug.form.upload"))},on:{click:function(t){return e.formFileUploadClick(n)}}},[e._v("选择文件")])],1)],1)])]}},{key:"operation",fn:function(t,n){return a("a-row",{},[n.new?e._e():a("a-button",{attrs:{type:"link"},domProps:{innerHTML:e._s(e.$t("debug.tableHeader.holderDel"))},on:{click:function(t){return e.formDelete(n)}}},[e._v("删除")])],1)}}],null,!1,2148726805)}):e._e()],1):e._e(),e.urlFormFlag?a("a-row",[e.urlFormTableFlag?a("a-table",{attrs:{bordered:"",size:"small",rowSelection:e.rowUrlFormSelection,columns:e.urlFormColumn,pagination:e.pagination,dataSource:e.urlFormData,rowKey:"id"},scopedSlots:e._u([{key:"urlFormName",fn:function(t,n){return[a("a-input",{attrs:{placeholder:n.description,"data-key":n.id,defaultValue:t},on:{change:e.urlFormNameChange}})]}},{key:"urlFormValue",fn:function(t,n){return[null!=n.enums?a("a-row",[a("a-select",{staticStyle:{width:"100%"},attrs:{mode:n.enumsMode,defaultValue:t,"data-key":n.id,options:n.enums},on:{change:e.urlFormContentEnumChange}})],1):a("a-row",[a("a-input",{class:"knife4j-debug-param-require"+n.require,attrs:{placeholder:n.description,"data-key":n.id,defaultValue:t},on:{change:e.urlFormContentChange}})],1)]}},{key:"operation",fn:function(t,n){return a("a-row",{},[n.new?e._e():a("a-button",{attrs:{type:"link"},domProps:{innerHTML:e._s(e.$t("debug.tableHeader.holderDel"))},on:{click:function(t){return e.urlFormDelete(n)}}},[e._v("删除")])],1)}}],null,!1,942578135)}):e._e()],1):e._e(),e.rawFlag?a("a-row",[e.rawFormFlag?a("a-row",[e.rawFormTableFlag?a("a-table",{attrs:{bordered:"",size:"small",rowSelection:e.rowRawFormSelection,columns:e.urlFormColumn,pagination:e.pagination,dataSource:e.rawFormData,rowKey:"id"},scopedSlots:e._u([{key:"urlFormName",fn:function(t,n){return[a("a-input",{attrs:{placeholder:n.description,"data-key":n.id,defaultValue:t},on:{change:e.rawFormNameChange}})]}},{key:"urlFormValue",fn:function(t,n){return[null!=n.enums?a("a-row",[a("a-select",{staticStyle:{width:"100%"},attrs:{mode:n.enumsMode,defaultValue:t,"data-key":n.id,options:n.enums},on:{change:e.rawFormContentEnumChange}})],1):a("a-row",[a("a-input",{class:"knife4j-debug-param-require"+n.require,attrs:{placeholder:n.description,"data-key":n.id,defaultValue:t},on:{change:e.rawFormContentChange}})],1)]}},{key:"operation",fn:function(t,n){return a("a-row",{},[n.new?e._e():a("a-button",{attrs:{type:"link"},domProps:{innerHTML:e._s(e.$t("debug.tableHeader.holderDel"))},on:{click:function(t){return e.rawFormDelete(n)}}},[e._v("删除")])],1)}}],null,!1,2757824471)}):e._e()],1):e._e(),a("editor-debug-show",{staticStyle:{"margin-top":"5px"},attrs:{value:e.rawText,mode:e.rawMode},on:{change:e.rawChange}})],1):e._e()],1),e.enableAfterScript?a("a-tab-pane",{key:"3",attrs:{tab:"AfterScript"}},[a("a-row",{staticStyle:{height:"25px","line-height":"25px"}},[e._v(" 关于AfterScript更详细的使用方法及介绍,请"),a("a",{attrs:{href:"https://gitee.com/xiaoym/knife4j/wikis/AfterScript",target:"_blank"}},[e._v("参考文档")])]),a("a-row",[a("editor-script",{staticStyle:{"margin-top":"5px"},attrs:{value:e.rawScript},on:{change:e.rawScriptChange}})],1)],1):e._e()],1)],1),a("a-row",[a("DebugResponse",{ref:"childDebugResponse",attrs:{responseFieldDescriptionChecked:e.responseFieldDescriptionChecked,swaggerInstance:e.swaggerInstance,api:e.api,debugSend:e.debugSend,responseContent:e.responseContent,responseCurlText:e.responseCurlText,responseStatus:e.responseStatus,responseRawText:e.responseRawText,responseHeaders:e.responseHeaders},on:{debugShowFieldDescriptionChange:e.debugShowFieldDescriptionChange,debugEditorChange:e.debugEditorChange}})],1)],1)])],1)}),[],!1,null,null,null);t.default=C.exports},b680:function(e,t,a){"use strict";var n=a("23e7"),r=a("a691"),i=a("408a"),o=a("1148"),s=a("d039"),l=1..toFixed,u=Math.floor,c=function(e,t,a){return 0===t?a:t%2==1?c(e,t-1,a*e):c(e*e,t/2,a)},d=function(e,t,a){for(var n=-1,r=a;++n<6;)r+=t*e[n],e[n]=r%1e7,r=u(r/1e7)},h=function(e,t){for(var a=6,n=0;--a>=0;)n+=e[a],e[a]=u(n/t),n=n%t*1e7},m=function(e){for(var t=6,a="";--t>=0;)if(""!==a||0===t||0!==e[t]){var n=String(e[t]);a=""===a?n:a+o.call("0",7-n.length)+n}return a};n({target:"Number",proto:!0,forced:l&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!s((function(){l.call({})}))},{toFixed:function(e){var t,a,n,s,l=i(this),u=r(e),p=[0,0,0,0,0,0],f="",g="0";if(u<0||u>20)throw RangeError("Incorrect fraction digits");if(l!=l)return"NaN";if(l<=-1e21||l>=1e21)return String(l);if(l<0&&(f="-",l=-l),l>1e-21)if(t=function(e){for(var t=0,a=e;a>=4096;)t+=12,a/=4096;for(;a>=2;)t+=1,a/=2;return t}(l*c(2,69,1))-69,a=t<0?l*c(2,-t,1):l/c(2,t,1),a*=4503599627370496,(t=52-t)>0){for(d(p,0,a),n=u;n>=7;)d(p,1e7,0),n-=7;for(d(p,c(10,n,1),0),n=t-1;n>=23;)h(p,1<<23),n-=23;h(p,1<<n),d(p,1,1),h(p,2),g=m(p)}else d(p,0,a),d(p,1<<-t,0),g=m(p)+o.call("0",u);return u>0?g=f+((s=g.length)<=u?"0."+o.call("0",u-s)+g:g.slice(0,s-u)+"."+g.slice(s-u)):g=f+g,g}})}}]);`
)






